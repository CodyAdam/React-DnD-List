{"version":3,"sources":["Droppable.js","index.js"],"names":["Droppable","props","onAdd","bind","onRemove","cardMove","onMouseDown","onMouseMove","onMouseUp","state","cards","initialState","startPos","lastId","length","newState","this","push","id","content","drag","setState","index","splice","old_index","new_index","newCards","k","undefined","e","x","clientX","y","clientY","newIndex","Math","min","max","floor","console","log","cardStyle","transition","cardDragStyle","cursor","zIndex","opacity","scale","className","style","overflowX","overflowY","onMouseLeave","map","card","cardClassName","key","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e5712ba.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Droppable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onAdd = this.onAdd.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n        this.cardMove = this.cardMove.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n        this.state = { cards: props.initialState, startPos: null, lastId: props.initialState.length };\r\n    }\r\n    onAdd() {\r\n        let newState = this.state;\r\n        newState.cards.push({\r\n            id: `card-${this.state.lastId + 1}`,\r\n            content: `Name ${this.state.cards.length + 1}`,\r\n            drag: false,\r\n        });\r\n        newState.lastId++;\r\n        this.setState(newState);\r\n    }\r\n\r\n    onRemove(index) {\r\n        let newState = this.state;\r\n        newState.cards.splice(index, 1);\r\n        this.setState(newState);\r\n    }\r\n\r\n    cardMove(old_index, new_index) {\r\n        let newCards = this.state.cards;\r\n\r\n        while (old_index < 0) old_index += newCards.length;\r\n        while (new_index < 0) new_index += newCards.length;\r\n        if (new_index >= newCards.length) {\r\n            var k = new_index - newCards.length + 1;\r\n            while (k--) newCards.push(undefined);\r\n        }\r\n        newCards.splice(new_index, 0, newCards.splice(old_index, 1)[0]);\r\n        this.setState({ cards: newCards });\r\n    }\r\n\r\n    onMouseDown(e, index) {\r\n        let newState = this.state;\r\n        newState.cards[index].drag = true;\r\n        newState.startPos = { x: e.clientX, y: e.clientY };\r\n        this.setState(newState);\r\n    }\r\n\r\n    onMouseMove(e) {\r\n        const { cards, startPos } = this.state;\r\n        for (let index = 0; index < cards.length; index++) {\r\n            if (cards[index].drag) {\r\n                const newIndex = Math.min(\r\n                    Math.max(index + Math.floor((e.clientY - startPos.y + 50) / 100), 0),\r\n                    cards.length - 1,\r\n                );\r\n                console.log(newIndex);\r\n                this.cardMove(index, newIndex);\r\n\r\n                this.setState({ startPos: { x: startPos.x, y: startPos.y + 100 * (newIndex - index) } });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseUp() {\r\n        let newState = this.state;\r\n        for (let index = 0; index < newState.cards.length; index++) {\r\n            newState.cards[index].drag = false;\r\n        }\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        const cards = this.state.cards;\r\n\r\n        const containerStyle = {\r\n            overflowX: \"hidden\",\r\n            overflowY: \"scroll\",\r\n        };\r\n\r\n        const cardStyle = {\r\n            transition: \"all .1s\",\r\n        };\r\n\r\n        const cardDragStyle = {\r\n            transition: \"all .1s\",\r\n            cursor: \"grabbing\",\r\n            zIndex: \"1\",\r\n            opacity: \"0.5\",\r\n            scale: \"0.9\",\r\n        };\r\n\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                style={containerStyle}\r\n                onMouseMove={this.onMouseMove}\r\n                onMouseUp={this.onMouseUp}\r\n                onMouseLeave={this.onMouseUp}\r\n            >\r\n                {cards.map((card, index) => {\r\n                    return (\r\n                        <div\r\n                            className={this.props.cardClassName}\r\n                            key={card.id}\r\n                            style={!card.drag ? cardStyle : cardDragStyle}\r\n                        >\r\n                            <span>\r\n                                <span className=\"name\">{card.content}</span>\r\n                                <br />\r\n                                <span className=\"id\">id : {card.id}</span>\r\n                            </span>\r\n                            <div\r\n                                className=\"drag\"\r\n                                onMouseDown={(e) => {\r\n                                    this.onMouseDown(e, index);\r\n                                }}\r\n                            >\r\n                                Drag Here\r\n                            </div>\r\n                            <button\r\n                                className=\"minus\"\r\n                                onClick={() => {\r\n                                    this.onRemove(index);\r\n                                }}\r\n                            >\r\n                                -\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <button className=\"plus\" onClick={this.onAdd}>\r\n                    +\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport Droppable from \"./Droppable.js\";\n\nconst initialState = [\n    { id: \"card-1\", content: \"Name 1\", drag: false },\n    { id: \"card-2\", content: \"Name 2\", drag: false },\n    { id: \"card-3\", content: \"Name 3\", drag: false },\n    { id: \"card-4\", content: \"Name 4\", drag: false },\n    { id: \"card-5\", content: \"Name 5\", drag: false },\n];\n\nfunction App() {\n    return (\n        <div id=\"App\">\n            <Droppable className=\"container\" cardClassName=\"card\" initialState={initialState} />\n        </div>\n    );\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}